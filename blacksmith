function	script	Repair_Checks	{
	set .@name$,getarg(1);
	set .@part,getarg(0);
	set .MaxRefine,getarg(2);
	
	clear;
	mes .@name$;
	if(getequipisequiped(.@part)) { 
		if(getequipisenableref(.@part)) { 
			if(getequiprefinerycnt(.@part) >= .MaxRefine) {  Mes "This item has already reached its limit, it can't go any further!"; close;
				} else { callfunc("Begin_Refine",.@part,.@name$,.MaxRefine); } 
					} else { Mes "I'm sorry, I'm not able to refine this."; close; }
						}else { Mes "Equip something there first."; close;}
}

function	script	Begin_Refine	{
	set .@name$,getarg(1);
	set .@part,getarg(0);
	set .MaxRefine,getarg(2);
clear;
mes .@name$;
Mes "Let me know when you want me to stop!";
	switch(select("Refine:Stop")){
		case 1:
			set .@SuccChance,rand(1,100);
			switch(getequipweaponlv(getarg(0))){
				case 1:
					clear;
					mes .@name$;
					if(getequiprefinerycnt(.@part)>9) { set .@FailChance,(getequiprefinerycnt(.@part)-9)*15; mes "[^FF0000WARNING^000000] ^FF0000"+.@FailChance+"% chance to fail^000000";}
					if(getequiprefinerycnt(.@part)==0) {set .@WZCost,1000; } else { set .@WZCost,getequiprefinerycnt(.@part)*1000; }
					if(getequiprefinerycnt(.@part)==0) {set .@WECost,1; } else { set .@WECost,getequiprefinerycnt(.@part);}
					mes "You'll need "+callfunc("int_format",.@WZCost)+" zeny and "+.@WECost+" Phracon to upgrade your weapon.";
					switch(select("Refine:Stop")){
						case 1:
							if((countitem(1010) < .@WECost)||(Zeny < .@WZCost)) callfunc("Refine_Stop",1);
								delitem 1010,.@WECost;
								Set Zeny,Zeny-.@WZCost;
								if(.@SuccChance < .@FailChance){specialeffect2 155; callfunc("Refine_Stop",3);}
								successrefitem(.@part);
								callfunc("Repair_Checks",.@part,.@name$,.MaxRefine);
						case 2:
							callfunc("Refine_Stop",2);
							close;
						}
				case 2:
					clear;
					mes .@name$;
					if(getequiprefinerycnt(.@part)>9) { set .@FailChance,(getequiprefinerycnt(.@part)-9)*15; mes "[^FF0000WARNING^000000] ^FF0000"+.@FailChance+"% chance to fail^000000";}
					if(getequiprefinerycnt(.@part)==0) {set .@WZCost,2500; } else { set .@WZCost,getequiprefinerycnt(.@part)*2500; }
					if(getequiprefinerycnt(.@part)==0) {set .@WECost,1; } else { set .@WECost,getequiprefinerycnt(.@part);}
					mes "You'll need "+callfunc("int_format",.@WZCost)+" zeny and "+.@WECost+" Emveretarcon to upgrade your weapon.";
					switch(select("Refine:Stop")){
						case 1:
							if((countitem(1011) < .@WECost)||(Zeny < .@WZCost)) callfunc("Refine_Stop",1);
								delitem 1011,.@WECost;
								Set Zeny,Zeny-.@WZCost;
								if(.@SuccChance < .@FailChance){specialeffect2 155; callfunc("Refine_Stop",3);}
								successrefitem(.@part);
								callfunc("Repair_Checks",.@part,.@name$,.MaxRefine);
						case 2:
							callfunc("Refine_Stop",2);
							close;
						}
				case 3:
					clear;
					mes .@name$;
					if(getequiprefinerycnt(.@part)>9) { set .@FailChance,(getequiprefinerycnt(.@part)-9)*15; mes "[^FF0000WARNING^000000] ^FF0000"+.@FailChance+"% chance to fail^000000";}
					if(getequiprefinerycnt(.@part)==0) {set .@WZCost,15000; } else { if(getequiprefinerycnt(.@part)>9){ set.@WZCost,getequiprefinerycnt(.@part)*100000;} else {set .@WZCost,getequiprefinerycnt(.@part)*15000; }}
					if(getequiprefinerycnt(.@part)==0) {set .@WECost,1; } else {if(getequiprefinerycnt(.@part)>9){ set.@WECost,getequiprefinerycnt(.@part)*2;} else {set .@WECost,getequiprefinerycnt(.@part); }}
					mes "You'll need "+callfunc("int_format",.@WZCost)+" zeny and "+.@WECost+" Oridecon to upgrade your weapon.";
					switch(select("Refine:Stop")){
						case 1:
							if((countitem(984) < .@WECost)||(Zeny < .@WZCost)) callfunc("Refine_Stop",1);
								delitem 984,.@WECost;
								Set Zeny,Zeny-.@WZCost;
								if(.@SuccChance < .@FailChance){specialeffect2 155; callfunc("Refine_Stop",3);}
								successrefitem(.@part);
								callfunc("Repair_Checks",.@part,.@name$,.MaxRefine);
						case 2:
							callfunc("Refine_Stop",2);
							close;
						}
				case 4:
					clear;
					mes .@name$;
					if(getequiprefinerycnt(.@part)>9) { set .@FailChance,(getequiprefinerycnt(.@part)-9)*15; mes "[^FF0000WARNING^000000] ^FF0000"+.@FailChance+"% chance to fail^000000";}
					if(getequiprefinerycnt(.@part)==0) {set .@WZCost,30000; } else { if(getequiprefinerycnt(.@part)>9){ set.@WZCost,getequiprefinerycnt(.@part)*150000;} else {set .@WZCost,getequiprefinerycnt(.@part)*30000; }}
					if(getequiprefinerycnt(.@part)==0) {set .@WECost,2; } else {if(getequiprefinerycnt(.@part)>9){ set.@WECost,getequiprefinerycnt(.@part)*3;} else {set .@WECost,getequiprefinerycnt(.@part)*2; }}
					mes "You'll need "+callfunc("int_format",.@WZCost)+" zeny and "+.@WECost+" Oridecon to upgrade your weapon.";
					switch(select("Refine:Stop")){
						case 1:
							if((countitem(984) < .@WECost)||(Zeny < .@WZCost)) callfunc("Refine_Stop",1);
								delitem 984,.@WECost;
								Set Zeny,Zeny-.@WZCost;
								if(.@SuccChance < .@FailChance){specialeffect2 155; callfunc("Refine_Stop",3);}
								successrefitem(.@part);
								callfunc("Repair_Checks",.@part,.@name$,.MaxRefine);
						case 2:
							callfunc("Refine_Stop",2);
							close;
						}
				default: // armor
					clear;
					mes .@name$;
					if(getequiprefinerycnt(.@part)>9) { set .@FailChance,(getequiprefinerycnt(.@part)-9)*10; mes "[^FF0000WARNING^000000] ^FF0000"+.@FailChance+"% chance to fail^000000";}
					if(getequiprefinerycnt(.@part)==0) {set .@AZCost,5000; } else { set .@AZCost,getequiprefinerycnt(.@part)*5000; }
					if(getequiprefinerycnt(.@part)==0) {set .@AECost,1; } else { set .@AECost,getequiprefinerycnt(.@part);}
					mes "You'll need "+callfunc("int_format",.@AZCost)+" zeny and "+.@AECost+" Elunium to upgrade your armor.";
					switch(select("Refine:Stop")){
						case 1:
							if((countitem(985) < .@AECost)||(Zeny < .@AZCost)) callfunc("Refine_Stop",1);
								delitem 985,.@AECost;
								Set Zeny,Zeny-.@AZCost;
								if(.@SuccChance < .@FailChance){specialeffect2 155; callfunc("Refine_Stop",3);}
								successrefitem(.@part);
								callfunc("Repair_Checks",.@part,.@name$,.MaxRefine);
						case 2:
							callfunc("Refine_Stop",2);
							close;
						}
			}
		case 2:
			callfunc("Refine_Stop",2);
			close;
	}
}

function	script	Refine_Stop	{
switch(getarg(0)){ 
	case 1:
		clear;
		mes "[^b34409Blacksmith^000000]";
		mes "I'm sorry, you don't have enough to complete this refinement!";
		close;
	case 2:
		clear;
		mes "[^b34409Blacksmith^000000]";
		Mes "As you wish " + (Sex?"sir":"mam") + "!";
		close;
	case 3:
		clear;
		mes "[^b34409Blacksmith^000000]";
		Mes "I'm so sorry " + (Sex?"sir":"mam") + ", the process seems to have failed! I've managed to salvage your weapon at its previous refinement level, please come back if you'd like to try again!";
		close;
	}
}

prt_in,172,132,0	script	Blacksmith#bro	869,{

	set .MaxRefine,15;		// What's the max refine level?
	set .RepairCost,100000;	// What's the cost to repair weapons?
	set .name$, "[^b34409Blacksmith^000000]";
	
set @broke,getbrokenid(1);
if(@broke==0) goto L_Start;
	mes .name$;
	Mes "I can repair your ^ff0000" + getitemname(@broke) + "^000000 for "+ callfunc("int_format",.RepairCost)+" zeny.";
	switch(select("Fix it.","No thanks.")){
		case 1:
			if(Zeny<.RepairCost){	Mes "You don't have enough zeny...";	close;	}
			repair 1;
			set Zeny,Zeny - .RepairCost;
		case 2:
			goto L_Start;
	}
L_Start:
	mes .name$;
	Mes "Hi! I'm the new guy. What do you need upgraded?";
	menu 	getequipname(1),RCSet1,
			getequipname(2),RCSet2,
			getequipname(3),RCSet3,
			getequipname(4),RCSet4,
			getequipname(5),RCSet5,
			getequipname(6),RCSet6,
			getequipname(7),RCSet7,
			getequipname(8),RCSet8,
			getequipname(9),RCSet9,
			getequipname(10),RCSet10;
			
RCSet1:		set .@part,1;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
RCSet2:		set .@part,2;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
RCSet3:		set .@part,3;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
RCSet4:		set .@part,4;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
RCSet5:		set .@part,5;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
RCSet6:		set .@part,6;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
RCSet7:		set .@part,7;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
RCSet8:		set .@part,8;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
RCSet9:		set .@part,9;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
RCSet10:	set .@part,10;	callfunc("Repair_Checks",.@part,.name$,.MaxRefine);
close;
}
